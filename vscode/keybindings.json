// Place your key bindings in this file to override the defaults
[
    // NAVIGATION
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key":  "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "space f a",
        "command":"workbench.action.showAllEditors",
        "when":"vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "\\",
        "command":"workbench.action.toggleSidebarVisibility",
        "when": "editorTextFocus && vim.mode == 'Normal' || !inputFocus && vim.mode == 'Normal'"
    },
    {
        "key": "space t n",
        "command": "workbench.action.nextEditorInGroup",
        "when":"vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space t p",
        "command": "workbench.action.previousEditorInGroup",
        "when":"(vim.mode == 'Normal'|| vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space t x",
        "command": "workbench.action.closeActiveEditor",
        "when":"(vim.mode == 'Normal'|| vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.view.explorer",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },


    // Coding lines navigation
    {
        "key": "shift-k",
        "command": "editor.action.showHover",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space c s",
        "command": "workbench.action.gotoSymbol",
        "when":"vim.mode=='Normal' && editorTextFocus"
    },
    {
        "key": "space f",
        "command":"workbench.action.quickOpen",
        "when":"vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space g r",
        "command":"editor.action.goToReferences",
        "when":"vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space s a",
        "command":"workbench.action.findInFiles",
        "when":"vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space s j",
        "command":"workbench.action.splitEditorDown",
        "when":"vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space s k",
        "command":"workbench.action.splitEditorUp",
        "when":"vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space s l",
        "command":"workbench.action.splitEditorRight",
        "when":"vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space s h",
        "command":"workbench.action.splitEditorLeft",
        "when":"vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },

    {
      "key": "ctrl+shift+j",
      "command": "workbench.action.togglePanel"
    },
    {
      "key": "a",
      "command": "explorer.newFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "f",
      "command": "explorer.newFolder",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "d",
      "command": "deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key" : "x",
      "command" : "filesExplorer.cut",
      "when" : "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "y",
      "command": "filesExplorer.copy",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
      "key": "p",
      "command": "filesExplorer.paste",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "s",
      "command": "explorer.openToSide",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
  
    // EXTRA
    {
      "key": "ctrl+shift+5",
      "command": "editor.emmet.action.matchTag"
    },
    {
      "key": "shift+cmd+i",
      "command": "-workbench.action.quickchat.toggle",
      "when": "chatIsEnabled"
    },
    {
      // Move focus to the GitHub Copilot Chat panel
      "key": "ctrl+0",
      "command": "workbench.panel.chat.view.copilot.focus",
      "when": "editorFocus" 
    },
    {
      "key": "ctrl+0",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "!editorFocus"
    },
    {
      "key": "enter",
      "command": "-renameFile",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "s",
      "command": "-workbench.action.files.save",
      "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    { 
        "key": "ctrl+shift+l",
        "command": "workbench.action.evenEditorWidths",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+y",
        "command": "-redo"
    },
    {
        "key": "ctrl+y",
        "command": "-extension.vim_ctrl+y",
        "when": "editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"
    },
    {
        "key": "ctrl+y",
        "command": "workbench.action.terminal.acceptSelectedSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-workbench.action.terminal.acceptSelectedSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "down",
        "command": "-workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.terminal.selectPrevSuggestion",
        "when": "simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory"
    },
    {
        "key": "up",
        "command": "-workbench.action.terminal.selectPrevSuggestion",
        "when": "simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+y",
        "command": "workbench.action.terminal.acceptSelectedSuggestionEnter",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore'"
    },
    {
        "key": "enter",
        "command": "-workbench.action.terminal.acceptSelectedSuggestionEnter",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore'"
    },
]